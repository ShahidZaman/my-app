{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","home_text","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newtext","toUpperCase","showAlert","toLowerCase","sentence","split","i","length","slice","join","document","getElementById","select","navigator","clipboard","writeText","Alert","alert","role","word","lower","charAt","capitalized","msg","propTypes","PropTypes","string","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a2f57ffa.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.home_text}</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <a className=\"nav-link\" href=\"/\">About</a> */}\r\n              </li>\r\n            \r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n    \r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode==='dark'?'Enter Light mode':'Enter Dark mode'}</label>\r\n              </div>\r\n\r\n\r\n\r\n          </div>\r\n        </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nexport default function Textform(props){\r\n    const handleUpclick = ()=>{\r\n        //console.log(\"you have clicked handleupclick\" +text);\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Converted to uppercase\",\"success\")\r\n    }\r\n    const handleOnchange = (event)=>{\r\n        console.log(\"On change\")\r\n        setText(event.target.value)\r\n    }\r\n    const handleLowerclick = ()=>{\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Converted to lowercase\",\"success\")\r\n    }\r\n    const handleClearclick = ()=>{\r\n        let newtext = '';\r\n        setText(newtext);\r\n        props.showAlert(\"Text cleaed\",\"success\")\r\n    }\r\n    const handleSenteceClick = ()=>{\r\n        let sentence = text.toLowerCase().split(\" \");\r\n        for (let i = 0; i < sentence.length; i++) {\r\n          sentence[i] = sentence[i][0].toUpperCase() + sentence[i].slice(1);\r\n        }\r\n        setText(sentence.join(\" \"))\r\n        props.showAlert(\"Sentence set\",\"success\")\r\n    }\r\n    \r\n    const handleCopyText = ()=>{\r\n        let newtext = document.getElementById('mybox');\r\n        newtext.select();\r\n        navigator.clipboard.writeText(newtext.value)\r\n        props.showAlert(\"Copy to clipboard\",\"success\")\r\n    }\r\n\r\n    const handleExtraSpaces = ()=>{\r\n        let newtext = text.split(/[ ]+/)\r\n        setText(newtext.join(\" \"))\r\n        props.showAlert(\"Extra spaces removed\",\"success\")\r\n    }\r\n    \r\n\r\n    const [text, setText] = useState(\"Enter text here\");\r\n \r\n    //text = \"xyzkdkjd \"; //wrong waty to change state;\r\n    //setText(\"please Enter text here\");//correct way to change state;\r\n    return (\r\n        <>\r\n        <div className=\"container my-5\" style={{color:props.mode==='dark'?'white':''}}>\r\n             <h2>{props.heading}</h2>\r\n            <div className=\"form-group\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnchange} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':''}} id=\"mybox\"  rows=\"8\" />\r\n            </div>\r\n            <button className=\"btn btn-primary my-2\" onClick= {handleUpclick}>Convert to uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick= {handleLowerclick}>Convert to lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick= {handleSenteceClick}>Sentence case</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick= {handleCopyText}>Copy to clipboard</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick= {handleExtraSpaces}>Remove Extra Spaces</button>\r\n            <button className=\"btn btn-danger mx-2\" onClick= {handleClearclick}>Clear Text</button>\r\n         </div>\r\n         <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':''}}>\r\n            <h2>The length of text summary</h2>\r\n            <p>{text===\"\"?0:text.split(\" \").length} Words and {text.length} characters</p>\r\n            <p>{0.08 * text.split(\" \").length} Minutes takes to read this</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the texbox to preview here\"}</p>\r\n         </div>\r\n         </>\r\n    )\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalized =(word)=>{\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalized(props.alert.type)}</strong>:{props.alert.msg}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","// import logo from './logo.svg';\nimport './App.css'; \nimport Navbar from './components/Navbar';\nimport Textform from './components/TextForm';\n// import About from './components/About';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert'\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null)\n\n  const showAlert =(message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  \n  }\n\n  const toggleMode =()=>{\n    if(mode=== 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#042743'\n      showAlert('Dark mode has been enabled','success')\n      document.title = 'Textutils - Dark mode'\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white'\n      showAlert('light mode has been enabled','success')\n      document.title = 'Textutils - light mode'\n    }\n    \n  }\n\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"Textutils\" home_text=\"Home\" mode={mode} toggleMode={toggleMode} />  \n      <Alert alert={alert}/>\n      <Textform showAlert={showAlert}  heading=\"Enter the text below to analyse\" mode={mode} />\n\n{/* \n      <Switch>\n      <Route exact path=\"/about\">\n      <About />\n      </Route>\n      <Route exact path=\"/\">\n      <Textform showAlert={showAlert}  heading=\"Enter the text below to analyse\" mode={mode} />\n      </Route>\n      </Switch> */}\n    {/* </Router> */}\n    \n\n    </>\n  );\n}\n\n  Navbar.propTypes = {\n  title: PropTypes.string,\n  home_text: PropTypes.string \n  }\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}